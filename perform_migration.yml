---
- name: "EAP {{ eap_source_version }} to {{ target_eap_version }} migration playbook"
  hosts: all
  vars:
    eap_source_version: 7.3.0
    target_eap_version: 7.4.0
    eap_configuration_file: eap.xml
    installed_eap_source: True
    eap_install_workdir: /opt/jboss_eap/
    migrated_eap_home: "{{ eap_install_workdir }}/jboss-eap-{{ (target_eap_version.split('.'))[0:2] | join('.') }}/"
    previous_eap_home: "{{ eap_install_workdir }}/jboss-eap-{{ (eap_source_version.split('.'))[0:2] | join('.') }}/"
    target_eap_home: "{{ eap_install_workdir }}/jboss-eap-{{ (target_eap_version.split('.'))[0:2] | join('.') }}/"
    skip_group_remove: False
    eap_service_name: eap
    eap_systemd_service_name: "{{ eap_service_name }}.service"
  vars_files:
    - vars/eap_system_info.yml
  collections:
    - redhat.eap
  pre_tasks:
    - name: "Populate service facts"
      ansible.builtin.service_facts:

    - name: "Stop EAP service"
      ansible.builtin.service:
        name: "{{ eap_service_name }}"
        state: stopped
      become: yes
      become_user: root
      when:
        - ansible_facts is defined
        - ansible_facts.services is defined
        - ansible_facts.services[eap_systemd_service_name] is defined
        - ansible_facts.services[eap_systemd_service_name]['state'] is defined
        - ansible_facts.services[eap_systemd_service_name]['state'] == 'running'

  tasks:
    - ansible.builtin.set_fact:
        migration_state_file: "{{ migrated_eap_home }}/migration/reports/migration-report.xml"

    - name: "Load migration state file data"
      ansible.builtin.stat:
        path: "{{ migration_state_file }}"
      register: is_migration_done
      become: yes
      become_user: root

    - ansible.builtin.assert:
        that:
          - is_migration_done is defined
          - is_migration_done.stat is defined
        quiet: True
        fail_msg: "Failed to retrieve metadata on migration state file: {{ migration_state_file }}."

    - block:

        - ansible.builtin.set_fact:
            migrated_conf: "{{ migrated_eap_home }}/standalone/configuration/{{ eap_configuration_file }}"
            target_conf: "{{ target_eap_home }}/standalone/configuration/{{ eap_configuration_file }}"

        - name: "Copy migrated configuration from {{ migrated_conf }} file to target {{ target_conf }}."
          ansible.builtin.copy:
            src: "{{ migrated_conf }}"
            dest: "{{ target_conf }}"
            owner: "{{ eap_user }}"
            group: "{{ eap_group }}"
            mode: '0644'
            remote_src: True

        - name: "Ensures 'rsync' is installed."
          ansible.builtin.package:
            name: rsync
            state: present

        - name: "Synchronize custom modules"
          ansible.posix.synchronize:
            src: "{{ migrated_eap_home }}/modules"
            dest: "{{ target_eap_home }}/"
            copy_links: no
            rsync_opts:
              - "--exclude {{ migrated_eap_home }}/modules/system"

        - name: "Ensures state file exists"
          ansible.builtin.file:
            path: "{{ migration_state_file }}"
            state: touch
            modification_time: preserve
            access_time: preserve

      rescue:
        - name: "Migration has failed."
          ansible.builtin.debug:
            msg: "Migration has failed."
      when:
        - not is_migration_done.stat.exists

    - ansible.builtin.debug:
        msg: "Server has already been migrated."
      when:
        - is_migration_done.stat.exists

  post_tasks:
    - name: "Ensures JBoss EAP {{ target_eap_version }} is running"
      ansible.builtin.include_role:
        name: eap_systemd
      vars:
        eap_systemd_enabled: True
        eap_version: "{{ target_eap_version }}"
